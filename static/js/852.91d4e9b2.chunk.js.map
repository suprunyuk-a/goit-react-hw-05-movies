{"version":3,"file":"static/js/852.91d4e9b2.chunk.js","mappings":"mLACA,EAA4B,6BAA5B,EAAqE,6BAArE,EAAyG,wB,SCG5FA,EAAY,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACjC,OACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,EAAMG,IAAMF,MAAOA,EAAxC,UACE,iBAAKG,UAAWC,EAAhB,WACE,gBACEC,IACEN,EAAMO,YAAN,yCACsCP,EAAMO,aACxC,0EAENC,IAAKR,EAAMS,MACXC,MAAM,MACNC,QAAQ,OACRP,UAAWC,KAEb,wBAAKL,EAAMS,SACX,uBAAIT,EAAMY,gBACV,cAAGR,UAAWC,EAAd,SAAyBL,EAAMa,aAAaC,QAAQ,SAI3D,C,gFCxBD,EAAgC,8BAAhC,EAAqE,qB,yBCArE,EAA6B,wC,6CCQhBC,EAAsB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpC,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MASjB,OAPAC,EAAAA,EAAAA,YAAU,WACHN,IAGLO,EAAAA,EAAAA,IAAkBP,GAAOQ,MAAK,SAAAC,GAAQ,OAAIN,EAAUM,EAASC,QAAvB,GACvC,GAAE,CAACV,KAGF,gBAAKZ,UAAWC,EAAhB,SACGa,EAAOS,OAAS,GACfT,EAAOU,KAAI,SAAA5B,GAAK,OACd,0BACE,SAACD,EAAA,EAAD,CAAWC,MAAOA,EAAOC,MAAO,CAAE4B,KAAMT,MADhCpB,EAAMG,GADF,KAOvB,EAEDJ,EAAAA,EAAAA,UAAsB,CACpBiB,MAAOc,IAAAA,Q,aCIT,EA/Be,WAAO,IAAD,EACnB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMjB,EAAK,UAAGgB,EAAaE,IAAI,gBAApB,QAAgC,GAe3C,OACE,iBAAK9B,UAAWC,EAAhB,WACE,kBAAMD,UAAWC,EAAU8B,SAfV,SAAAC,GACnBA,EAAMC,iBAEN,IAAMC,EAAaF,EAAMG,cAAcC,SAASC,YAAYC,MAEzC,KAAfJ,IAGJL,EAAgB,CAAEjB,MAAOsB,IAEzBF,EAAMG,cAAcI,QACrB,EAIG,WACE,kBAAOC,KAAK,OAAOC,KAAK,iBACxB,mBAAQD,KAAK,SAAb,UACE,SAAC,MAAD,SAGH5B,IAAS,SAACD,EAAD,CAAqBC,MAAOA,MAG3C,C,uJCnCD,IAAM8B,EAAU,mCAGHC,EAAsB,kBAAMC,MAAM,6DAAD,OAA8DF,IAAWtB,MAAK,SAAAC,GAAQ,OAAIA,EAASwB,MAAb,GAAjG,EAGtB1B,EAAoB,SAACP,GAAD,OAAWgC,MAAM,mDAAD,OAAoDhC,EAApD,oBAAqE8B,IAAWtB,MAAK,SAAAC,GAAQ,OAAIA,EAASwB,MAAb,GAA7G,EAGpBC,EAAiB,SAAC/C,GAAD,OAAQ6C,MAAM,sCAAD,OAAuC7C,EAAvC,oBAAqD2C,IAAWtB,MAAK,SAAAC,GAAQ,OAAIA,EAASwB,MAAb,GAA1F,EAGjBE,EAAwB,SAAChD,GAAD,OAAQ6C,MAAM,sCAAD,OAAuC7C,EAAvC,4BAA6D2C,IAAWtB,MAAK,SAAAC,GAAQ,OAAIA,EAASwB,MAAb,GAAlG,EAGxBG,EAAwB,SAACjD,GAAD,OAAQ6C,MAAM,sCAAD,OAAuC7C,EAAvC,4BAA6D2C,IAAWtB,MAAK,SAAAC,GAAQ,OAAIA,EAASwB,MAAb,GAAlG,C","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.jsx","webpack://goit-react-hw-05-movies/./src/pages/Movies/Movies.module.css?82ee","webpack://goit-react-hw-05-movies/./src/components/SearchingMoviesList/SearchingMoviesList.module.css?3bc8","components/SearchingMoviesList/SearchingMoviesList.jsx","pages/Movies/Movies.jsx","services/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"MovieCard\":\"MovieCard_MovieCard__DStH+\",\"cardImage\":\"MovieCard_cardImage__hecEt\",\"rate\":\"MovieCard_rate__lAI3j\"};","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport css from '../MovieCard/MovieCard.module.css';\n\nexport const MovieCard = ({ movie, state }) => {\n  return (\n    <Link to={`/movies/${movie.id}`} state={state}>\n      <div className={css.MovieCard}>\n        <img\n          src={\n            movie.poster_path\n              ? `https://image.tmdb.org/t/p/w780${movie.poster_path}`\n              : 'https://cdn.pixabay.com/photo/2014/03/25/16/27/movie-297135_960_720.png'\n          }\n          alt={movie.title}\n          width=\"200\"\n          loading=\"lazy\"\n          className={css.cardImage}\n        />\n        <h2>{movie.title}</h2>\n        <p>{movie.release_date}</p>\n        <p className={css.rate}>{movie.vote_average.toFixed(1)}</p>\n      </div>\n    </Link>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.object.isRequired,\n  state: PropTypes.object.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesSection\":\"Movies_moviesSection__o4M2J\",\"form\":\"Movies_form__4ow+Z\"};","// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"SearchingMoviesList_moviesList__Mv5fr\"};","import PropTypes from 'prop-types';\n\nimport css from '../SearchingMoviesList/SearchingMoviesList.module.css';\n\nimport { fetchMovieByQuery } from '../../services/API';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport const SearchingMoviesList = ({ query }) => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    fetchMovieByQuery(query).then(response => setMovies(response.results));\n  }, [query]);\n\n  return (\n    <div className={css.moviesList}>\n      {movies.length > 0 &&\n        movies.map(movie => (\n          <div key={movie.id}>\n            <MovieCard movie={movie} state={{ from: location }} />\n          </div>\n        ))}\n    </div>\n  );\n};\n\nMovieCard.propTypes = {\n  query: PropTypes.string,\n};\n","import css from '../Movies/Movies.module.css';\nimport { BsSearch } from 'react-icons/bs';\n\nimport { SearchingMoviesList } from 'components/SearchingMoviesList/SearchingMoviesList';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query') ?? '';\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const inputValue = event.currentTarget.elements.searchQuery.value;\n\n    if (inputValue === '') {\n      return;\n    }\n    setSearchParams({ query: inputValue });\n\n    event.currentTarget.reset();\n  };\n\n  return (\n    <div className={css.moviesSection}>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"searchQuery\" />\n        <button type=\"submit\">\n          <BsSearch />\n        </button>\n      </form>\n      {query && <SearchingMoviesList query={query} />}\n    </div>\n  );\n};\n\nexport default Movies;\n","const API_KEY = 'f7ffdce4cad751b792655bd09ea4613c';\n\n\nexport const fetchTrandingMovies = () => fetch(`https://api.themoviedb.org/3//trending/movie/week?api_key=${API_KEY}`).then(response => response.json());\n\n\nexport const fetchMovieByQuery = (query) => fetch(`https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${API_KEY}`).then(response => response.json());\n\n\nexport const fetchMovieById = (id) => fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`).then(response => response.json());\n\n\nexport const fetchMovieCreditsById = (id) => fetch(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`).then(response => response.json());\n\n\nexport const fetchMovieReviewsById = (id) => fetch(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`).then(response => response.json());\n\n\n"],"names":["MovieCard","movie","state","to","id","className","css","src","poster_path","alt","title","width","loading","release_date","vote_average","toFixed","SearchingMoviesList","query","useState","movies","setMovies","location","useLocation","useEffect","fetchMovieByQuery","then","response","results","length","map","from","PropTypes","useSearchParams","searchParams","setSearchParams","get","onSubmit","event","preventDefault","inputValue","currentTarget","elements","searchQuery","value","reset","type","name","API_KEY","fetchTrandingMovies","fetch","json","fetchMovieById","fetchMovieCreditsById","fetchMovieReviewsById"],"sourceRoot":""}